{
    "swagger": "2.0",
    "info": {
        "description": "...",
        "title": "UnderNET Channel Service API",
        "contact": {
            "name": "Ratler",
            "email": "ratler@undernet.org"
        },
        "license": {
            "name": "MIT",
            "url": "https://github.com/UndernetIRC/cservice-api/blob/master/LICENSE"
        },
        "version": "0.1"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/admin/roles": {
            "get": {
                "security": [
                    {
                        "JWTBearerToken": []
                    }
                ],
                "description": "Returns a list of roles",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "List roles",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/admin.RoleListResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWTBearerToken": []
                    }
                ],
                "description": "Creates a new role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Create role",
                "parameters": [
                    {
                        "description": "Role data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.RoleDataRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/admin.RoleCreateResponse"
                        }
                    }
                }
            }
        },
        "/admin/roles/{id}": {
            "put": {
                "security": [
                    {
                        "JWTBearerToken": []
                    }
                ],
                "description": "Updates a role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Update role",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Role data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.RoleDataRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/admin.roleUpdateResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWTBearerToken": []
                    }
                ],
                "description": "Deletes a role",
                "tags": [
                    "admin"
                ],
                "summary": "Delete role",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/admin/roles/{id}/users": {
            "post": {
                "security": [
                    {
                        "JWTBearerToken": []
                    }
                ],
                "description": "Assigns users to a role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Assign users to role",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "List of usernames",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.UsersRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWTBearerToken": []
                    }
                ],
                "description": "Removes users from a role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Remove users from role",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "List of usernames",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.UsersRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/authn": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Authenticate user to retrieve JWT token",
                "parameters": [
                    {
                        "description": "Login request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.loginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.LoginResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid username or password"
                    }
                }
            }
        },
        "/authn/factor_verify": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Verify the user factor (OTP)",
                "parameters": [
                    {
                        "description": "State token and OTP",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.factorRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/controllers.customError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/controllers.customError"
                        }
                    }
                }
            }
        },
        "/authn/logout": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Logout user",
                "parameters": [
                    {
                        "description": "Logout request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.logoutRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Logged out",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/controllers.customError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/controllers.customError"
                        }
                    }
                }
            }
        },
        "/authn/refresh": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Request new session tokens using a Refresh JWT token",
                "parameters": [
                    {
                        "description": "Refresh token",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.refreshTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/controllers.customError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/controllers.customError"
                        }
                    }
                }
            }
        },
        "/authn/register": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "Register request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User created"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/controllers.customError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/controllers.customError"
                        }
                    }
                }
            }
        },
        "/me": {
            "get": {
                "security": [
                    {
                        "JWTBearerToken": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get detailed information about the current user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.MeResponse"
                        }
                    },
                    "401": {
                        "description": "Authorization information is missing or invalid."
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "security": [
                    {
                        "JWTBearerToken": []
                    }
                ],
                "description": "Returns a user by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user data by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.UserResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}/roles": {
            "get": {
                "security": [
                    {
                        "JWTBearerToken": []
                    }
                ],
                "description": "Get the roles for a given user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get the roles for a given user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.UserRolesResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid user ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "admin.RoleCreateResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "admin.RoleDataRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3,
                    "x-order": "0"
                },
                "description": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 3,
                    "x-order": "1"
                }
            }
        },
        "admin.RoleListResponse": {
            "type": "object",
            "properties": {
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/admin.RoleNameResponse"
                    }
                }
            }
        },
        "admin.RoleNameResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "x-order": "0"
                },
                "name": {
                    "type": "string",
                    "x-order": "1"
                },
                "description": {
                    "type": "string",
                    "x-order": "2"
                }
            }
        },
        "admin.UsersRequest": {
            "type": "object",
            "required": [
                "users"
            ],
            "properties": {
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "admin.roleUpdateResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "controllers.LoginResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string",
                    "x-order": "0"
                },
                "refresh_token": {
                    "type": "string",
                    "x-order": "1"
                }
            }
        },
        "controllers.MeChannelResponse": {
            "type": "object",
            "properties": {
                "access": {
                    "type": "integer"
                },
                "channel_id": {
                    "type": "integer"
                },
                "last_modified": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "controllers.MeResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "x-order": "0"
                },
                "username": {
                    "type": "string",
                    "x-order": "1"
                },
                "email": {
                    "type": "string",
                    "x-order": "2"
                },
                "max_logins": {
                    "type": "integer",
                    "x-order": "3"
                },
                "language_code": {
                    "type": "string",
                    "x-order": "4"
                },
                "language_name": {
                    "type": "string",
                    "x-order": "5"
                },
                "last_seen": {
                    "type": "integer",
                    "x-order": "6"
                },
                "totp_enabled": {
                    "type": "boolean",
                    "x-order": "8"
                },
                "channels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controllers.MeChannelResponse"
                    },
                    "x-order": "9"
                }
            }
        },
        "controllers.RegisterRequest": {
            "type": "object",
            "required": [
                "coppa",
                "email",
                "eula",
                "password",
                "username"
            ],
            "properties": {
                "username": {
                    "type": "string",
                    "maxLength": 12,
                    "minLength": 2,
                    "x-order": "0"
                },
                "password": {
                    "type": "string",
                    "maxLength": 72,
                    "minLength": 10,
                    "x-order": "1"
                },
                "email": {
                    "type": "string",
                    "x-order": "2"
                },
                "eula": {
                    "type": "boolean",
                    "x-order": "3"
                },
                "coppa": {
                    "type": "boolean",
                    "x-order": "4"
                }
            }
        },
        "controllers.Role": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "x-order": "0"
                },
                "name": {
                    "type": "string",
                    "x-order": "1"
                },
                "description": {
                    "type": "string",
                    "x-order": "2"
                }
            }
        },
        "controllers.UserChannelResponse": {
            "type": "object",
            "properties": {
                "access": {
                    "type": "integer"
                },
                "channel_id": {
                    "type": "integer"
                },
                "last_modified": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "controllers.UserResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "x-order": "0"
                },
                "username": {
                    "type": "string",
                    "x-order": "1"
                },
                "email": {
                    "type": "string",
                    "x-order": "2"
                },
                "max_logins": {
                    "type": "integer",
                    "x-order": "3"
                },
                "language_code": {
                    "type": "string",
                    "x-order": "4"
                },
                "language_name": {
                    "type": "string",
                    "x-order": "5"
                },
                "last_seen": {
                    "type": "integer",
                    "x-order": "6"
                },
                "totp_enabled": {
                    "type": "boolean",
                    "x-order": "7"
                },
                "channels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controllers.UserChannelResponse"
                    },
                    "x-order": "8"
                }
            }
        },
        "controllers.UserRolesResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer",
                            "x-order": "0"
                        },
                        "username": {
                            "type": "string",
                            "x-order": "1"
                        },
                        "roles": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/controllers.Role"
                            },
                            "x-order": "1"
                        }
                    },
                    "x-order": "0"
                }
            }
        },
        "controllers.customError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "controllers.factorRequest": {
            "type": "object",
            "required": [
                "otp"
            ],
            "properties": {
                "otp": {
                    "type": "string"
                },
                "state_token": {
                    "type": "string"
                }
            }
        },
        "controllers.loginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "username": {
                    "type": "string",
                    "maxLength": 12,
                    "minLength": 2,
                    "x-order": "0"
                },
                "password": {
                    "type": "string",
                    "maxLength": 72,
                    "x-order": "1"
                }
            }
        },
        "controllers.logoutRequest": {
            "type": "object",
            "properties": {
                "logout_all": {
                    "type": "boolean"
                }
            }
        },
        "controllers.refreshTokenRequest": {
            "type": "object",
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "JWTBearerToken": {
            "description": "JWT Bearer Token",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}