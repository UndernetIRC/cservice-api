// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: supporters.sql

package models

import (
	"context"
)

const createChannelSupporter = `-- name: CreateChannelSupporter :exec

INSERT INTO supporters (
  channel_id,
  user_id,
  support,
  join_count,
  last_updated
) VALUES (
  $1, $2, 'Y', 0, EXTRACT(EPOCH FROM NOW())::int
)
`

// Supporters table queries for channel registration
// Adds a supporter to a pending channel registration
func (q *Queries) CreateChannelSupporter(ctx context.Context, channelID int32, userID int32) error {
	_, err := q.db.Exec(ctx, createChannelSupporter, channelID, userID)
	return err
}

const deleteChannelSupporters = `-- name: DeleteChannelSupporters :exec
DELETE FROM supporters
WHERE channel_id = $1
`

// Removes all supporters for a pending channel
func (q *Queries) DeleteChannelSupporters(ctx context.Context, channelID int32) error {
	_, err := q.db.Exec(ctx, deleteChannelSupporters, channelID)
	return err
}

const deleteSpecificChannelSupporter = `-- name: DeleteSpecificChannelSupporter :exec
DELETE FROM supporters
WHERE channel_id = $1 AND user_id = $2
`

// Removes a specific supporter from a pending channel
func (q *Queries) DeleteSpecificChannelSupporter(ctx context.Context, channelID int32, userID int32) error {
	_, err := q.db.Exec(ctx, deleteSpecificChannelSupporter, channelID, userID)
	return err
}
