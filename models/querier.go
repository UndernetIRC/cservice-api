// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package models

import (
	"context"
	"net/netip"

	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	AddUserRole(ctx context.Context, userID int32, roleID int32) error
	AddUsersToRole(ctx context.Context, arg []AddUsersToRoleParams) (int64, error)
	CheckChannelExists(ctx context.Context, id int32) (CheckChannelExistsRow, error)
	CheckEmailExists(ctx context.Context, email string) ([]pgtype.Text, error)
	CheckUsernameExists(ctx context.Context, username string) ([]string, error)
	CleanupExpiredPasswordResetTokens(ctx context.Context, expiresAt int32, lastUpdated int32) error
	CreatePasswordResetToken(ctx context.Context, arg CreatePasswordResetTokenParams) (PasswordResetToken, error)
	CreatePendingUser(ctx context.Context, arg CreatePendingUserParams) (pgtype.Text, error)
	CreateRole(ctx context.Context, arg CreateRoleParams) (Role, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	DeleteExpiredPasswordResetTokens(ctx context.Context, expiresAt int32) error
	DeletePendingUserByCookie(ctx context.Context, cookie pgtype.Text) error
	DeleteRole(ctx context.Context, id int32) error
	GetActivePasswordResetTokensByUserID(ctx context.Context, userID pgtype.Int4, expiresAt int32) ([]PasswordResetToken, error)
	GetAdminLevel(ctx context.Context, userID int32) (GetAdminLevelRow, error)
	GetChannelByID(ctx context.Context, id int32) (GetChannelByIDRow, error)
	GetChannelDetails(ctx context.Context, id int32) (GetChannelDetailsRow, error)
	GetChannelUserAccess(ctx context.Context, channelID int32, userID int32) (GetChannelUserAccessRow, error)
	GetGlineByIP(ctx context.Context, host string) (Gline, error)
	GetPasswordResetTokenByToken(ctx context.Context, token string) (PasswordResetToken, error)
	GetPasswordResetTokenStats(ctx context.Context, expiresAt int32) (GetPasswordResetTokenStatsRow, error)
	GetPendingUserByCookie(ctx context.Context, cookie pgtype.Text) (Pendinguser, error)
	GetRoleByID(ctx context.Context, id int32) (Role, error)
	GetRoleByName(ctx context.Context, name string) (Role, error)
	GetUser(ctx context.Context, arg GetUserParams) (GetUserRow, error)
	GetUserByEmail(ctx context.Context, email string) (User, error)
	GetUserByID(ctx context.Context, id int32) (GetUserByIDRow, error)
	GetUserByUsername(ctx context.Context, username string) (User, error)
	GetUserChannels(ctx context.Context, userID int32) ([]GetUserChannelsRow, error)
	GetUsersByUsernames(ctx context.Context, userids []string) ([]GetUsersByUsernamesRow, error)
	GetWhiteListByIP(ctx context.Context, ip netip.Addr) (Whitelist, error)
	InvalidateUserPasswordResetTokens(ctx context.Context, userID pgtype.Int4, lastUpdated int32) error
	ListPendingUsers(ctx context.Context) ([]Pendinguser, error)
	ListRoles(ctx context.Context) ([]Role, error)
	ListUserRoles(ctx context.Context, userID int32) ([]Role, error)
	MarkPasswordResetTokenAsUsed(ctx context.Context, arg MarkPasswordResetTokenAsUsedParams) error
	RemoveUserRole(ctx context.Context, userID int32, roleID int32) error
	RemoveUsersFromRole(ctx context.Context, userIds []int32, roleID int32) error
	SearchChannels(ctx context.Context, arg SearchChannelsParams) ([]SearchChannelsRow, error)
	SearchChannelsCount(ctx context.Context, name string) (int64, error)
	UpdateChannelSettings(ctx context.Context, arg UpdateChannelSettingsParams) (UpdateChannelSettingsRow, error)
	UpdateRole(ctx context.Context, arg UpdateRoleParams) error
	UpdateUserFlags(ctx context.Context, arg UpdateUserFlagsParams) error
	UpdateUserPassword(ctx context.Context, arg UpdateUserPasswordParams) error
	UpdateUserTotpKey(ctx context.Context, arg UpdateUserTotpKeyParams) error
	ValidatePasswordResetToken(ctx context.Context, token string, expiresAt int32) (PasswordResetToken, error)
}

var _ Querier = (*Queries)(nil)
